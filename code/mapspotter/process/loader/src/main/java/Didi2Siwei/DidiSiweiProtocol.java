// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: didi_siwei_protocol.proto

package Didi2Siwei;

public final class DidiSiweiProtocol {
    private DidiSiweiProtocol() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    /**
     * Protobuf enum {@code Didi2Siwei.UserSourceType}
     * <p/>
     * <pre>
     * 用户数据来源
     * </pre>
     */
    public enum UserSourceType implements
            com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>LOC_GPS = 0;</code>
         * <p/>
         * <pre>
         * GPS数据
         * </pre>
         */
        LOC_GPS(0, 0),
        /**
         * <code>LOC_WIFI = 1;</code>
         * <p/>
         * <pre>
         * WIFI定位数据
         * </pre>
         */
        LOC_WIFI(1, 1),
        /**
         * <code>LOC_OTHER = 2;</code>
         * <p/>
         * <pre>
         * 其他
         * </pre>
         */
        LOC_OTHER(2, 2),;

        /**
         * <code>LOC_GPS = 0;</code>
         * <p/>
         * <pre>
         * GPS数据
         * </pre>
         */
        public static final int LOC_GPS_VALUE = 0;
        /**
         * <code>LOC_WIFI = 1;</code>
         * <p/>
         * <pre>
         * WIFI定位数据
         * </pre>
         */
        public static final int LOC_WIFI_VALUE = 1;
        /**
         * <code>LOC_OTHER = 2;</code>
         * <p/>
         * <pre>
         * 其他
         * </pre>
         */
        public static final int LOC_OTHER_VALUE = 2;

        public final int getNumber() {
            return value;
        }

        public static UserSourceType valueOf(int value) {
            switch (value) {
                case 0:
                    return LOC_GPS;
                case 1:
                    return LOC_WIFI;
                case 2:
                    return LOC_OTHER;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<UserSourceType> internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<UserSourceType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<UserSourceType>() {
            public UserSourceType findValueByNumber(int number) {
                return UserSourceType.valueOf(number);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
            return DidiSiweiProtocol.getDescriptor().getEnumTypes()
                    .get(0);
        }

        private static final UserSourceType[] VALUES = values();

        public static UserSourceType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private UserSourceType(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:Didi2Siwei.UserSourceType)
    }

    /**
     * Protobuf enum {@code Didi2Siwei.DataSourceVendor}
     * <p/>
     * <pre>
     * 数据提供方
     * </pre>
     */
    public enum DataSourceVendor implements
            com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>DD_TAXI = 0;</code>
         * <p/>
         * <pre>
         * 出租车
         * </pre>
         */
        DD_TAXI(0, 0),
        /**
         * <code>DD_GS = 1;</code>
         * <p/>
         * <pre>
         * 专车
         * </pre>
         */
        DD_GS(1, 1),
        /**
         * <code>KD_TAXI = 2;</code>
         * <p/>
         * <pre>
         * 快的
         * </pre>
         */
        KD_TAXI(2, 2),
        /**
         * <code>DD_SHUNFENG = 3;</code>
         * <p/>
         * <pre>
         * 顺风车
         * </pre>
         */
        DD_SHUNFENG(3, 3),;

        /**
         * <code>DD_TAXI = 0;</code>
         * <p/>
         * <pre>
         * 出租车
         * </pre>
         */
        public static final int DD_TAXI_VALUE = 0;
        /**
         * <code>DD_GS = 1;</code>
         * <p/>
         * <pre>
         * 专车
         * </pre>
         */
        public static final int DD_GS_VALUE = 1;
        /**
         * <code>KD_TAXI = 2;</code>
         * <p/>
         * <pre>
         * 快的
         * </pre>
         */
        public static final int KD_TAXI_VALUE = 2;
        /**
         * <code>DD_SHUNFENG = 3;</code>
         * <p/>
         * <pre>
         * 顺风车
         * </pre>
         */
        public static final int DD_SHUNFENG_VALUE = 3;

        public final int getNumber() {
            return value;
        }

        public static DataSourceVendor valueOf(int value) {
            switch (value) {
                case 0:
                    return DD_TAXI;
                case 1:
                    return DD_GS;
                case 2:
                    return KD_TAXI;
                case 3:
                    return DD_SHUNFENG;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DataSourceVendor> internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<DataSourceVendor> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<DataSourceVendor>() {
            public DataSourceVendor findValueByNumber(int number) {
                return DataSourceVendor.valueOf(number);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
            return DidiSiweiProtocol.getDescriptor().getEnumTypes()
                    .get(1);
        }

        private static final DataSourceVendor[] VALUES = values();

        public static DataSourceVendor valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private DataSourceVendor(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:Didi2Siwei.DataSourceVendor)
    }

    /**
     * Protobuf enum {@code Didi2Siwei.DriverWorkState}
     * <p/>
     * <pre>
     * 是否载客
     * </pre>
     */
    public enum DriverWorkState implements
            com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>DriverNotWorking = 0;</code>
         * <p/>
         * <pre>
         * 出租司机已收车
         * </pre>
         */
        DriverNotWorking(0, 0),
        /**
         * <code>DriverWorkingWithoutPassenger = 1;</code>
         * <p/>
         * <pre>
         * 出租司机出车未接客
         * </pre>
         */
        DriverWorkingWithoutPassenger(1, 1),
        /**
         * <code>DriverWorkingWithPassenger = 2;</code>
         * <p/>
         * <pre>
         * 出租司机出车已接客
         * </pre>
         */
        DriverWorkingWithPassenger(2, 2),
        /**
         * <code>DriverWorking = 3;</code>
         * <p/>
         * <pre>
         * 出租司机已出车
         * </pre>
         */
        DriverWorking(3, 3),;

        /**
         * <code>DriverNotWorking = 0;</code>
         * <p/>
         * <pre>
         * 出租司机已收车
         * </pre>
         */
        public static final int DriverNotWorking_VALUE = 0;
        /**
         * <code>DriverWorkingWithoutPassenger = 1;</code>
         * <p/>
         * <pre>
         * 出租司机出车未接客
         * </pre>
         */
        public static final int DriverWorkingWithoutPassenger_VALUE = 1;
        /**
         * <code>DriverWorkingWithPassenger = 2;</code>
         * <p/>
         * <pre>
         * 出租司机出车已接客
         * </pre>
         */
        public static final int DriverWorkingWithPassenger_VALUE = 2;
        /**
         * <code>DriverWorking = 3;</code>
         * <p/>
         * <pre>
         * 出租司机已出车
         * </pre>
         */
        public static final int DriverWorking_VALUE = 3;

        public final int getNumber() {
            return value;
        }

        public static DriverWorkState valueOf(int value) {
            switch (value) {
                case 0:
                    return DriverNotWorking;
                case 1:
                    return DriverWorkingWithoutPassenger;
                case 2:
                    return DriverWorkingWithPassenger;
                case 3:
                    return DriverWorking;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DriverWorkState> internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<DriverWorkState> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<DriverWorkState>() {
            public DriverWorkState findValueByNumber(int number) {
                return DriverWorkState.valueOf(number);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
            return DidiSiweiProtocol.getDescriptor().getEnumTypes()
                    .get(2);
        }

        private static final DriverWorkState[] VALUES = values();

        public static DriverWorkState valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private DriverWorkState(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:Didi2Siwei.DriverWorkState)
    }

    /**
     * Protobuf enum {@code Didi2Siwei.CoordinateType}
     * <p/>
     * <pre>
     * 坐标系统
     * </pre>
     */
    public enum CoordinateType implements
            com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>BD_09 = 1;</code>
         * <p/>
         * <pre>
         * 百度坐标系,BD-09
         * </pre>
         */
        BD_09(0, 1),
        /**
         * <code>GCJ_02 = 2;</code>
         * <p/>
         * <pre>
         * SOSO坐标系,GCJ-02
         * </pre>
         */
        GCJ_02(1, 2),
        /**
         * <code>WGS_84 = 4;</code>
         * <p/>
         * <pre>
         * 国际标准坐标系,WGS-84
         * </pre>
         */
        WGS_84(2, 4),;

        /**
         * <code>BD_09 = 1;</code>
         * <p/>
         * <pre>
         * 百度坐标系,BD-09
         * </pre>
         */
        public static final int BD_09_VALUE = 1;
        /**
         * <code>GCJ_02 = 2;</code>
         * <p/>
         * <pre>
         * SOSO坐标系,GCJ-02
         * </pre>
         */
        public static final int GCJ_02_VALUE = 2;
        /**
         * <code>WGS_84 = 4;</code>
         * <p/>
         * <pre>
         * 国际标准坐标系,WGS-84
         * </pre>
         */
        public static final int WGS_84_VALUE = 4;

        public final int getNumber() {
            return value;
        }

        public static CoordinateType valueOf(int value) {
            switch (value) {
                case 1:
                    return BD_09;
                case 2:
                    return GCJ_02;
                case 4:
                    return WGS_84;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<CoordinateType> internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<CoordinateType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<CoordinateType>() {
            public CoordinateType findValueByNumber(int number) {
                return CoordinateType.valueOf(number);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
            return DidiSiweiProtocol.getDescriptor().getEnumTypes()
                    .get(3);
        }

        private static final CoordinateType[] VALUES = values();

        public static CoordinateType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private CoordinateType(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:Didi2Siwei.CoordinateType)
    }

    public interface Dd2SwTrajPointOrBuilder extends
            com.google.protobuf.MessageOrBuilder {

        // optional string userid = 1;

        /**
         * <code>optional string userid = 1;</code>
         * <p/>
         * <pre>
         * 匿名的用户ID
         * </pre>
         */
        boolean hasUserid();

        /**
         * <code>optional string userid = 1;</code>
         * <p/>
         * <pre>
         * 匿名的用户ID
         * </pre>
         */
        String getUserid();

        /**
         * <code>optional string userid = 1;</code>
         * <p/>
         * <pre>
         * 匿名的用户ID
         * </pre>
         */
        com.google.protobuf.ByteString getUseridBytes();

        // optional .Didi2Siwei.UserSourceType loc_source = 2;

        /**
         * <code>optional .Didi2Siwei.UserSourceType loc_source = 2;</code>
         * <p/>
         * <pre>
         * 用户数据来源
         * </pre>
         */
        boolean hasLocSource();

        /**
         * <code>optional .Didi2Siwei.UserSourceType loc_source = 2;</code>
         * <p/>
         * <pre>
         * 用户数据来源
         * </pre>
         */
        UserSourceType getLocSource();

        // optional uint64 location_timestamp = 3;

        /**
         * <code>optional uint64 location_timestamp = 3;</code>
         * <p/>
         * <pre>
         * 位置点时间
         * </pre>
         */
        boolean hasLocationTimestamp();

        /**
         * <code>optional uint64 location_timestamp = 3;</code>
         * <p/>
         * <pre>
         * 位置点时间
         * </pre>
         */
        long getLocationTimestamp();

        // optional double speed = 4;

        /**
         * <code>optional double speed = 4;</code>
         * <p/>
         * <pre>
         * 速度
         * </pre>
         */
        boolean hasSpeed();

        /**
         * <code>optional double speed = 4;</code>
         * <p/>
         * <pre>
         * 速度
         * </pre>
         */
        double getSpeed();

        // optional double direction = 5;

        /**
         * <code>optional double direction = 5;</code>
         * <p/>
         * <pre>
         * 方向(以度为单位，与正北方向顺时针的角度)
         * </pre>
         */
        boolean hasDirection();

        /**
         * <code>optional double direction = 5;</code>
         * <p/>
         * <pre>
         * 方向(以度为单位，与正北方向顺时针的角度)
         * </pre>
         */
        double getDirection();

        // optional double lat = 6;

        /**
         * <code>optional double lat = 6;</code>
         * <p/>
         * <pre>
         * 纬度
         * </pre>
         */
        boolean hasLat();

        /**
         * <code>optional double lat = 6;</code>
         * <p/>
         * <pre>
         * 纬度
         * </pre>
         */
        double getLat();

        // optional double lng = 7;

        /**
         * <code>optional double lng = 7;</code>
         * <p/>
         * <pre>
         * 经度
         * </pre>
         */
        boolean hasLng();

        /**
         * <code>optional double lng = 7;</code>
         * <p/>
         * <pre>
         * 经度
         * </pre>
         */
        double getLng();

        // optional .Didi2Siwei.CoordinateType coord_type = 8;

        /**
         * <code>optional .Didi2Siwei.CoordinateType coord_type = 8;</code>
         * <p/>
         * <pre>
         * 坐标系统
         * </pre>
         */
        boolean hasCoordType();

        /**
         * <code>optional .Didi2Siwei.CoordinateType coord_type = 8;</code>
         * <p/>
         * <pre>
         * 坐标系统
         * </pre>
         */
        CoordinateType getCoordType();

        // optional uint32 accuracy = 9;

        /**
         * <code>optional uint32 accuracy = 9;</code>
         * <p/>
         * <pre>
         * HDOP 水平精度因子( horizontal dilution of precision )
         * </pre>
         */
        boolean hasAccuracy();

        /**
         * <code>optional uint32 accuracy = 9;</code>
         * <p/>
         * <pre>
         * HDOP 水平精度因子( horizontal dilution of precision )
         * </pre>
         */
        int getAccuracy();

        // optional .Didi2Siwei.DataSourceVendor data_source = 10;

        /**
         * <code>optional .Didi2Siwei.DataSourceVendor data_source = 10;</code>
         * <p/>
         * <pre>
         * 专车、出租车
         * </pre>
         */
        boolean hasDataSource();

        /**
         * <code>optional .Didi2Siwei.DataSourceVendor data_source = 10;</code>
         * <p/>
         * <pre>
         * 专车、出租车
         * </pre>
         */
        DataSourceVendor getDataSource();

        // optional .Didi2Siwei.DriverWorkState work_state = 11;

        /**
         * <code>optional .Didi2Siwei.DriverWorkState work_state = 11;</code>
         * <p/>
         * <pre>
         * 轻重车
         * </pre>
         */
        boolean hasWorkState();

        /**
         * <code>optional .Didi2Siwei.DriverWorkState work_state = 11;</code>
         * <p/>
         * <pre>
         * 轻重车
         * </pre>
         */
        DriverWorkState getWorkState();
    }

    /**
     * Protobuf type {@code Didi2Siwei.Dd2SwTrajPoint}
     * <p/>
     * <pre>
     * Kafka 消息格式
     * </pre>
     */
    public static final class Dd2SwTrajPoint extends
            com.google.protobuf.GeneratedMessage implements
            Dd2SwTrajPointOrBuilder {
        // Use Dd2SwTrajPoint.newBuilder() to construct.
        private Dd2SwTrajPoint(
                com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private Dd2SwTrajPoint(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet
                    .getDefaultInstance();
        }

        private static final Dd2SwTrajPoint defaultInstance;

        public static Dd2SwTrajPoint getDefaultInstance() {
            return defaultInstance;
        }

        public Dd2SwTrajPoint getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private Dd2SwTrajPoint(com.google.protobuf.CodedInputStream input,
                               com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
                    .newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            userid_ = input.readBytes();
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            UserSourceType value = UserSourceType
                                    .valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                locSource_ = value;
                            }
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            locationTimestamp_ = input.readUInt64();
                            break;
                        }
                        case 33: {
                            bitField0_ |= 0x00000008;
                            speed_ = input.readDouble();
                            break;
                        }
                        case 41: {
                            bitField0_ |= 0x00000010;
                            direction_ = input.readDouble();
                            break;
                        }
                        case 49: {
                            bitField0_ |= 0x00000020;
                            lat_ = input.readDouble();
                            break;
                        }
                        case 57: {
                            bitField0_ |= 0x00000040;
                            lng_ = input.readDouble();
                            break;
                        }
                        case 64: {
                            int rawValue = input.readEnum();
                            CoordinateType value = CoordinateType
                                    .valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(8, rawValue);
                            } else {
                                bitField0_ |= 0x00000080;
                                coordType_ = value;
                            }
                            break;
                        }
                        case 72: {
                            bitField0_ |= 0x00000100;
                            accuracy_ = input.readUInt32();
                            break;
                        }
                        case 80: {
                            int rawValue = input.readEnum();
                            DataSourceVendor value = DataSourceVendor
                                    .valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(10, rawValue);
                            } else {
                                bitField0_ |= 0x00000200;
                                dataSource_ = value;
                            }
                            break;
                        }
                        case 88: {
                            int rawValue = input.readEnum();
                            DriverWorkState value = DriverWorkState
                                    .valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(11, rawValue);
                            } else {
                                bitField0_ |= 0x00000400;
                                workState_ = value;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return DidiSiweiProtocol.internal_static_Didi2Siwei_Dd2SwTrajPoint_descriptor;
        }

        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return DidiSiweiProtocol.internal_static_Didi2Siwei_Dd2SwTrajPoint_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Dd2SwTrajPoint.class,
                            Builder.class);
        }

        public static com.google.protobuf.Parser<Dd2SwTrajPoint> PARSER = new com.google.protobuf.AbstractParser<Dd2SwTrajPoint>() {
            public Dd2SwTrajPoint parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Dd2SwTrajPoint(input, extensionRegistry);
            }
        };

        @Override
        public com.google.protobuf.Parser<Dd2SwTrajPoint> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional string userid = 1;
        public static final int USERID_FIELD_NUMBER = 1;
        private Object userid_;

        /**
         * <code>optional string userid = 1;</code>
         * <p/>
         * <pre>
         * 匿名的用户ID
         * </pre>
         */
        public boolean hasUserid() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional string userid = 1;</code>
         * <p/>
         * <pre>
         * 匿名的用户ID
         * </pre>
         */
        public String getUserid() {
            Object ref = userid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    userid_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string userid = 1;</code>
         * <p/>
         * <pre>
         * 匿名的用户ID
         * </pre>
         */
        public com.google.protobuf.ByteString getUseridBytes() {
            Object ref = userid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString
                        .copyFromUtf8((String) ref);
                userid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional .Didi2Siwei.UserSourceType loc_source = 2;
        public static final int LOC_SOURCE_FIELD_NUMBER = 2;
        private UserSourceType locSource_;

        /**
         * <code>optional .Didi2Siwei.UserSourceType loc_source = 2;</code>
         * <p/>
         * <pre>
         * 用户数据来源
         * </pre>
         */
        public boolean hasLocSource() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional .Didi2Siwei.UserSourceType loc_source = 2;</code>
         * <p/>
         * <pre>
         * 用户数据来源
         * </pre>
         */
        public UserSourceType getLocSource() {
            return locSource_;
        }

        // optional uint64 location_timestamp = 3;
        public static final int LOCATION_TIMESTAMP_FIELD_NUMBER = 3;
        private long locationTimestamp_;

        /**
         * <code>optional uint64 location_timestamp = 3;</code>
         * <p/>
         * <pre>
         * 位置点时间
         * </pre>
         */
        public boolean hasLocationTimestamp() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional uint64 location_timestamp = 3;</code>
         * <p/>
         * <pre>
         * 位置点时间
         * </pre>
         */
        public long getLocationTimestamp() {
            return locationTimestamp_;
        }

        // optional double speed = 4;
        public static final int SPEED_FIELD_NUMBER = 4;
        private double speed_;

        /**
         * <code>optional double speed = 4;</code>
         * <p/>
         * <pre>
         * 速度
         * </pre>
         */
        public boolean hasSpeed() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional double speed = 4;</code>
         * <p/>
         * <pre>
         * 速度
         * </pre>
         */
        public double getSpeed() {
            return speed_;
        }

        // optional double direction = 5;
        public static final int DIRECTION_FIELD_NUMBER = 5;
        private double direction_;

        /**
         * <code>optional double direction = 5;</code>
         * <p/>
         * <pre>
         * 方向(以度为单位，与正北方向顺时针的角度)
         * </pre>
         */
        public boolean hasDirection() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional double direction = 5;</code>
         * <p/>
         * <pre>
         * 方向(以度为单位，与正北方向顺时针的角度)
         * </pre>
         */
        public double getDirection() {
            return direction_;
        }

        // optional double lat = 6;
        public static final int LAT_FIELD_NUMBER = 6;
        private double lat_;

        /**
         * <code>optional double lat = 6;</code>
         * <p/>
         * <pre>
         * 纬度
         * </pre>
         */
        public boolean hasLat() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <code>optional double lat = 6;</code>
         * <p/>
         * <pre>
         * 纬度
         * </pre>
         */
        public double getLat() {
            return lat_;
        }

        // optional double lng = 7;
        public static final int LNG_FIELD_NUMBER = 7;
        private double lng_;

        /**
         * <code>optional double lng = 7;</code>
         * <p/>
         * <pre>
         * 经度
         * </pre>
         */
        public boolean hasLng() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <code>optional double lng = 7;</code>
         * <p/>
         * <pre>
         * 经度
         * </pre>
         */
        public double getLng() {
            return lng_;
        }

        // optional .Didi2Siwei.CoordinateType coord_type = 8;
        public static final int COORD_TYPE_FIELD_NUMBER = 8;
        private CoordinateType coordType_;

        /**
         * <code>optional .Didi2Siwei.CoordinateType coord_type = 8;</code>
         * <p/>
         * <pre>
         * 坐标系统
         * </pre>
         */
        public boolean hasCoordType() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        /**
         * <code>optional .Didi2Siwei.CoordinateType coord_type = 8;</code>
         * <p/>
         * <pre>
         * 坐标系统
         * </pre>
         */
        public CoordinateType getCoordType() {
            return coordType_;
        }

        // optional uint32 accuracy = 9;
        public static final int ACCURACY_FIELD_NUMBER = 9;
        private int accuracy_;

        /**
         * <code>optional uint32 accuracy = 9;</code>
         * <p/>
         * <pre>
         * HDOP 水平精度因子( horizontal dilution of precision )
         * </pre>
         */
        public boolean hasAccuracy() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
        }

        /**
         * <code>optional uint32 accuracy = 9;</code>
         * <p/>
         * <pre>
         * HDOP 水平精度因子( horizontal dilution of precision )
         * </pre>
         */
        public int getAccuracy() {
            return accuracy_;
        }

        // optional .Didi2Siwei.DataSourceVendor data_source = 10;
        public static final int DATA_SOURCE_FIELD_NUMBER = 10;
        private DataSourceVendor dataSource_;

        /**
         * <code>optional .Didi2Siwei.DataSourceVendor data_source = 10;</code>
         * <p/>
         * <pre>
         * 专车、出租车
         * </pre>
         */
        public boolean hasDataSource() {
            return ((bitField0_ & 0x00000200) == 0x00000200);
        }

        /**
         * <code>optional .Didi2Siwei.DataSourceVendor data_source = 10;</code>
         * <p/>
         * <pre>
         * 专车、出租车
         * </pre>
         */
        public DataSourceVendor getDataSource() {
            return dataSource_;
        }

        // optional .Didi2Siwei.DriverWorkState work_state = 11;
        public static final int WORK_STATE_FIELD_NUMBER = 11;
        private DriverWorkState workState_;

        /**
         * <code>optional .Didi2Siwei.DriverWorkState work_state = 11;</code>
         * <p/>
         * <pre>
         * 轻重车
         * </pre>
         */
        public boolean hasWorkState() {
            return ((bitField0_ & 0x00000400) == 0x00000400);
        }

        /**
         * <code>optional .Didi2Siwei.DriverWorkState work_state = 11;</code>
         * <p/>
         * <pre>
         * 轻重车
         * </pre>
         */
        public DriverWorkState getWorkState() {
            return workState_;
        }

        private void initFields() {
            userid_ = "";
            locSource_ = UserSourceType.LOC_GPS;
            locationTimestamp_ = 0L;
            speed_ = 0D;
            direction_ = 0D;
            lat_ = 0D;
            lng_ = 0D;
            coordType_ = CoordinateType.BD_09;
            accuracy_ = 0;
            dataSource_ = DataSourceVendor.DD_TAXI;
            workState_ = DriverWorkState.DriverNotWorking;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1)
                return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getUseridBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, locSource_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, locationTimestamp_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeDouble(4, speed_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeDouble(5, direction_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeDouble(6, lat_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeDouble(7, lng_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeEnum(8, coordType_.getNumber());
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                output.writeUInt32(9, accuracy_);
            }
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
                output.writeEnum(10, dataSource_.getNumber());
            }
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
                output.writeEnum(11, workState_.getNumber());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1)
                return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(
                        1, getUseridBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeEnumSize(
                        2, locSource_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(3, locationTimestamp_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(4, speed_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(5, direction_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(6, lat_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(7, lng_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream.computeEnumSize(
                        8, coordType_.getNumber());
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(9, accuracy_);
            }
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
                size += com.google.protobuf.CodedOutputStream.computeEnumSize(
                        10, dataSource_.getNumber());
            }
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
                size += com.google.protobuf.CodedOutputStream.computeEnumSize(
                        11, workState_.getNumber());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static Dd2SwTrajPoint parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Dd2SwTrajPoint parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Dd2SwTrajPoint parseFrom(
                byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Dd2SwTrajPoint parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Dd2SwTrajPoint parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static Dd2SwTrajPoint parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Dd2SwTrajPoint parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static Dd2SwTrajPoint parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static Dd2SwTrajPoint parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static Dd2SwTrajPoint parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(
                Dd2SwTrajPoint prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code Didi2Siwei.Dd2SwTrajPoint}
         * <p/>
         * <pre>
         * Kafka 消息格式
         * </pre>
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                Dd2SwTrajPointOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return DidiSiweiProtocol.internal_static_Didi2Siwei_Dd2SwTrajPoint_descriptor;
            }

            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return DidiSiweiProtocol.internal_static_Didi2Siwei_Dd2SwTrajPoint_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Dd2SwTrajPoint.class,
                                Builder.class);
            }

            // Construct using
            // Didi2Siwei.DidiSiweiProtocol.Dd2SwTrajPoint.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                userid_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                locSource_ = UserSourceType.LOC_GPS;
                bitField0_ = (bitField0_ & ~0x00000002);
                locationTimestamp_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                speed_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000008);
                direction_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000010);
                lat_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000020);
                lng_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000040);
                coordType_ = CoordinateType.BD_09;
                bitField0_ = (bitField0_ & ~0x00000080);
                accuracy_ = 0;
                bitField0_ = (bitField0_ & ~0x00000100);
                dataSource_ = DataSourceVendor.DD_TAXI;
                bitField0_ = (bitField0_ & ~0x00000200);
                workState_ = DriverWorkState.DriverNotWorking;
                bitField0_ = (bitField0_ & ~0x00000400);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return DidiSiweiProtocol.internal_static_Didi2Siwei_Dd2SwTrajPoint_descriptor;
            }

            public Dd2SwTrajPoint getDefaultInstanceForType() {
                return Dd2SwTrajPoint
                        .getDefaultInstance();
            }

            public Dd2SwTrajPoint build() {
                Dd2SwTrajPoint result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Dd2SwTrajPoint buildPartial() {
                Dd2SwTrajPoint result = new Dd2SwTrajPoint(
                        this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.userid_ = userid_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.locSource_ = locSource_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.locationTimestamp_ = locationTimestamp_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.speed_ = speed_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.direction_ = direction_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.lat_ = lat_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.lng_ = lng_;
                if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.coordType_ = coordType_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000100;
                }
                result.accuracy_ = accuracy_;
                if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
                    to_bitField0_ |= 0x00000200;
                }
                result.dataSource_ = dataSource_;
                if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
                    to_bitField0_ |= 0x00000400;
                }
                result.workState_ = workState_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Dd2SwTrajPoint) {
                    return mergeFrom((Dd2SwTrajPoint) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(
                    Dd2SwTrajPoint other) {
                if (other == Dd2SwTrajPoint
                        .getDefaultInstance())
                    return this;
                if (other.hasUserid()) {
                    bitField0_ |= 0x00000001;
                    userid_ = other.userid_;
                    onChanged();
                }
                if (other.hasLocSource()) {
                    setLocSource(other.getLocSource());
                }
                if (other.hasLocationTimestamp()) {
                    setLocationTimestamp(other.getLocationTimestamp());
                }
                if (other.hasSpeed()) {
                    setSpeed(other.getSpeed());
                }
                if (other.hasDirection()) {
                    setDirection(other.getDirection());
                }
                if (other.hasLat()) {
                    setLat(other.getLat());
                }
                if (other.hasLng()) {
                    setLng(other.getLng());
                }
                if (other.hasCoordType()) {
                    setCoordType(other.getCoordType());
                }
                if (other.hasAccuracy()) {
                    setAccuracy(other.getAccuracy());
                }
                if (other.hasDataSource()) {
                    setDataSource(other.getDataSource());
                }
                if (other.hasWorkState()) {
                    setWorkState(other.getWorkState());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Dd2SwTrajPoint parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input,
                            extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Dd2SwTrajPoint) e
                            .getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // optional string userid = 1;
            private Object userid_ = "";

            /**
             * <code>optional string userid = 1;</code>
             * <p/>
             * <pre>
             * 匿名的用户ID
             * </pre>
             */
            public boolean hasUserid() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional string userid = 1;</code>
             * <p/>
             * <pre>
             * 匿名的用户ID
             * </pre>
             */
            public String getUserid() {
                Object ref = userid_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    userid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string userid = 1;</code>
             * <p/>
             * <pre>
             * 匿名的用户ID
             * </pre>
             */
            public com.google.protobuf.ByteString getUseridBytes() {
                Object ref = userid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString
                            .copyFromUtf8((String) ref);
                    userid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string userid = 1;</code>
             * <p/>
             * <pre>
             * 匿名的用户ID
             * </pre>
             */
            public Builder setUserid(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                userid_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string userid = 1;</code>
             * <p/>
             * <pre>
             * 匿名的用户ID
             * </pre>
             */
            public Builder clearUserid() {
                bitField0_ = (bitField0_ & ~0x00000001);
                userid_ = getDefaultInstance().getUserid();
                onChanged();
                return this;
            }

            /**
             * <code>optional string userid = 1;</code>
             * <p/>
             * <pre>
             * 匿名的用户ID
             * </pre>
             */
            public Builder setUseridBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                userid_ = value;
                onChanged();
                return this;
            }

            // optional .Didi2Siwei.UserSourceType loc_source = 2;
            private UserSourceType locSource_ = UserSourceType.LOC_GPS;

            /**
             * <code>optional .Didi2Siwei.UserSourceType loc_source = 2;</code>
             * <p/>
             * <pre>
             * 用户数据来源
             * </pre>
             */
            public boolean hasLocSource() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional .Didi2Siwei.UserSourceType loc_source = 2;</code>
             * <p/>
             * <pre>
             * 用户数据来源
             * </pre>
             */
            public UserSourceType getLocSource() {
                return locSource_;
            }

            /**
             * <code>optional .Didi2Siwei.UserSourceType loc_source = 2;</code>
             * <p/>
             * <pre>
             * 用户数据来源
             * </pre>
             */
            public Builder setLocSource(
                    UserSourceType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                locSource_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .Didi2Siwei.UserSourceType loc_source = 2;</code>
             * <p/>
             * <pre>
             * 用户数据来源
             * </pre>
             */
            public Builder clearLocSource() {
                bitField0_ = (bitField0_ & ~0x00000002);
                locSource_ = UserSourceType.LOC_GPS;
                onChanged();
                return this;
            }

            // optional uint64 location_timestamp = 3;
            private long locationTimestamp_;

            /**
             * <code>optional uint64 location_timestamp = 3;</code>
             * <p/>
             * <pre>
             * 位置点时间
             * </pre>
             */
            public boolean hasLocationTimestamp() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional uint64 location_timestamp = 3;</code>
             * <p/>
             * <pre>
             * 位置点时间
             * </pre>
             */
            public long getLocationTimestamp() {
                return locationTimestamp_;
            }

            /**
             * <code>optional uint64 location_timestamp = 3;</code>
             * <p/>
             * <pre>
             * 位置点时间
             * </pre>
             */
            public Builder setLocationTimestamp(long value) {
                bitField0_ |= 0x00000004;
                locationTimestamp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint64 location_timestamp = 3;</code>
             * <p/>
             * <pre>
             * 位置点时间
             * </pre>
             */
            public Builder clearLocationTimestamp() {
                bitField0_ = (bitField0_ & ~0x00000004);
                locationTimestamp_ = 0L;
                onChanged();
                return this;
            }

            // optional double speed = 4;
            private double speed_;

            /**
             * <code>optional double speed = 4;</code>
             * <p/>
             * <pre>
             * 速度
             * </pre>
             */
            public boolean hasSpeed() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional double speed = 4;</code>
             * <p/>
             * <pre>
             * 速度
             * </pre>
             */
            public double getSpeed() {
                return speed_;
            }

            /**
             * <code>optional double speed = 4;</code>
             * <p/>
             * <pre>
             * 速度
             * </pre>
             */
            public Builder setSpeed(double value) {
                bitField0_ |= 0x00000008;
                speed_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional double speed = 4;</code>
             * <p/>
             * <pre>
             * 速度
             * </pre>
             */
            public Builder clearSpeed() {
                bitField0_ = (bitField0_ & ~0x00000008);
                speed_ = 0D;
                onChanged();
                return this;
            }

            // optional double direction = 5;
            private double direction_;

            /**
             * <code>optional double direction = 5;</code>
             * <p/>
             * <pre>
             * 方向(以度为单位，与正北方向顺时针的角度)
             * </pre>
             */
            public boolean hasDirection() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional double direction = 5;</code>
             * <p/>
             * <pre>
             * 方向(以度为单位，与正北方向顺时针的角度)
             * </pre>
             */
            public double getDirection() {
                return direction_;
            }

            /**
             * <code>optional double direction = 5;</code>
             * <p/>
             * <pre>
             * 方向(以度为单位，与正北方向顺时针的角度)
             * </pre>
             */
            public Builder setDirection(double value) {
                bitField0_ |= 0x00000010;
                direction_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional double direction = 5;</code>
             * <p/>
             * <pre>
             * 方向(以度为单位，与正北方向顺时针的角度)
             * </pre>
             */
            public Builder clearDirection() {
                bitField0_ = (bitField0_ & ~0x00000010);
                direction_ = 0D;
                onChanged();
                return this;
            }

            // optional double lat = 6;
            private double lat_;

            /**
             * <code>optional double lat = 6;</code>
             * <p/>
             * <pre>
             * 纬度
             * </pre>
             */
            public boolean hasLat() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <code>optional double lat = 6;</code>
             * <p/>
             * <pre>
             * 纬度
             * </pre>
             */
            public double getLat() {
                return lat_;
            }

            /**
             * <code>optional double lat = 6;</code>
             * <p/>
             * <pre>
             * 纬度
             * </pre>
             */
            public Builder setLat(double value) {
                bitField0_ |= 0x00000020;
                lat_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional double lat = 6;</code>
             * <p/>
             * <pre>
             * 纬度
             * </pre>
             */
            public Builder clearLat() {
                bitField0_ = (bitField0_ & ~0x00000020);
                lat_ = 0D;
                onChanged();
                return this;
            }

            // optional double lng = 7;
            private double lng_;

            /**
             * <code>optional double lng = 7;</code>
             * <p/>
             * <pre>
             * 经度
             * </pre>
             */
            public boolean hasLng() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <code>optional double lng = 7;</code>
             * <p/>
             * <pre>
             * 经度
             * </pre>
             */
            public double getLng() {
                return lng_;
            }

            /**
             * <code>optional double lng = 7;</code>
             * <p/>
             * <pre>
             * 经度
             * </pre>
             */
            public Builder setLng(double value) {
                bitField0_ |= 0x00000040;
                lng_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional double lng = 7;</code>
             * <p/>
             * <pre>
             * 经度
             * </pre>
             */
            public Builder clearLng() {
                bitField0_ = (bitField0_ & ~0x00000040);
                lng_ = 0D;
                onChanged();
                return this;
            }

            // optional .Didi2Siwei.CoordinateType coord_type = 8;
            private CoordinateType coordType_ = CoordinateType.BD_09;

            /**
             * <code>optional .Didi2Siwei.CoordinateType coord_type = 8;</code>
             * <p/>
             * <pre>
             * 坐标系统
             * </pre>
             */
            public boolean hasCoordType() {
                return ((bitField0_ & 0x00000080) == 0x00000080);
            }

            /**
             * <code>optional .Didi2Siwei.CoordinateType coord_type = 8;</code>
             * <p/>
             * <pre>
             * 坐标系统
             * </pre>
             */
            public CoordinateType getCoordType() {
                return coordType_;
            }

            /**
             * <code>optional .Didi2Siwei.CoordinateType coord_type = 8;</code>
             * <p/>
             * <pre>
             * 坐标系统
             * </pre>
             */
            public Builder setCoordType(
                    CoordinateType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000080;
                coordType_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .Didi2Siwei.CoordinateType coord_type = 8;</code>
             * <p/>
             * <pre>
             * 坐标系统
             * </pre>
             */
            public Builder clearCoordType() {
                bitField0_ = (bitField0_ & ~0x00000080);
                coordType_ = CoordinateType.BD_09;
                onChanged();
                return this;
            }

            // optional uint32 accuracy = 9;
            private int accuracy_;

            /**
             * <code>optional uint32 accuracy = 9;</code>
             * <p/>
             * <pre>
             * HDOP 水平精度因子( horizontal dilution of precision )
             * </pre>
             */
            public boolean hasAccuracy() {
                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            /**
             * <code>optional uint32 accuracy = 9;</code>
             * <p/>
             * <pre>
             * HDOP 水平精度因子( horizontal dilution of precision )
             * </pre>
             */
            public int getAccuracy() {
                return accuracy_;
            }

            /**
             * <code>optional uint32 accuracy = 9;</code>
             * <p/>
             * <pre>
             * HDOP 水平精度因子( horizontal dilution of precision )
             * </pre>
             */
            public Builder setAccuracy(int value) {
                bitField0_ |= 0x00000100;
                accuracy_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 accuracy = 9;</code>
             * <p/>
             * <pre>
             * HDOP 水平精度因子( horizontal dilution of precision )
             * </pre>
             */
            public Builder clearAccuracy() {
                bitField0_ = (bitField0_ & ~0x00000100);
                accuracy_ = 0;
                onChanged();
                return this;
            }

            // optional .Didi2Siwei.DataSourceVendor data_source = 10;
            private DataSourceVendor dataSource_ = DataSourceVendor.DD_TAXI;

            /**
             * <code>optional .Didi2Siwei.DataSourceVendor data_source = 10;</code>
             * <p/>
             * <pre>
             * 专车、出租车
             * </pre>
             */
            public boolean hasDataSource() {
                return ((bitField0_ & 0x00000200) == 0x00000200);
            }

            /**
             * <code>optional .Didi2Siwei.DataSourceVendor data_source = 10;</code>
             * <p/>
             * <pre>
             * 专车、出租车
             * </pre>
             */
            public DataSourceVendor getDataSource() {
                return dataSource_;
            }

            /**
             * <code>optional .Didi2Siwei.DataSourceVendor data_source = 10;</code>
             * <p/>
             * <pre>
             * 专车、出租车
             * </pre>
             */
            public Builder setDataSource(
                    DataSourceVendor value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000200;
                dataSource_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .Didi2Siwei.DataSourceVendor data_source = 10;</code>
             * <p/>
             * <pre>
             * 专车、出租车
             * </pre>
             */
            public Builder clearDataSource() {
                bitField0_ = (bitField0_ & ~0x00000200);
                dataSource_ = DataSourceVendor.DD_TAXI;
                onChanged();
                return this;
            }

            // optional .Didi2Siwei.DriverWorkState work_state = 11;
            private DriverWorkState workState_ = DriverWorkState.DriverNotWorking;

            /**
             * <code>optional .Didi2Siwei.DriverWorkState work_state = 11;</code>
             * <p/>
             * <pre>
             * 轻重车
             * </pre>
             */
            public boolean hasWorkState() {
                return ((bitField0_ & 0x00000400) == 0x00000400);
            }

            /**
             * <code>optional .Didi2Siwei.DriverWorkState work_state = 11;</code>
             * <p/>
             * <pre>
             * 轻重车
             * </pre>
             */
            public DriverWorkState getWorkState() {
                return workState_;
            }

            /**
             * <code>optional .Didi2Siwei.DriverWorkState work_state = 11;</code>
             * <p/>
             * <pre>
             * 轻重车
             * </pre>
             */
            public Builder setWorkState(
                    DriverWorkState value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000400;
                workState_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .Didi2Siwei.DriverWorkState work_state = 11;</code>
             * <p/>
             * <pre>
             * 轻重车
             * </pre>
             */
            public Builder clearWorkState() {
                bitField0_ = (bitField0_ & ~0x00000400);
                workState_ = DriverWorkState.DriverNotWorking;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:Didi2Siwei.Dd2SwTrajPoint)
        }

        static {
            defaultInstance = new Dd2SwTrajPoint(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:Didi2Siwei.Dd2SwTrajPoint)
    }

    private static com.google.protobuf.Descriptors.Descriptor internal_static_Didi2Siwei_Dd2SwTrajPoint_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_Didi2Siwei_Dd2SwTrajPoint_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

    static {
        String[] descriptorData = {
                "\n\031didi_siwei_protocol.proto\022\nDidi2Siwei\""
                        + "\316\002\n\016Dd2SwTrajPoint\022\016\n\006userid\030\001 \001(\t\022.\n\nlo"
                        + "c_source\030\002 \001(\0162\032.Didi2Siwei.UserSourceTy"
                        + "pe\022\032\n\022location_timestamp\030\003 \001(\004\022\r\n\005speed\030"
                        + "\004 \001(\001\022\021\n\tdirection\030\005 \001(\001\022\013\n\003lat\030\006 \001(\001\022\013\n"
                        + "\003lng\030\007 \001(\001\022.\n\ncoord_type\030\010 \001(\0162\032.Didi2Si"
                        + "wei.CoordinateType\022\020\n\010accuracy\030\t \001(\r\0221\n\013"
                        + "data_source\030\n \001(\0162\034.Didi2Siwei.DataSourc"
                        + "eVendor\022/\n\nwork_state\030\013 \001(\0162\033.Didi2Siwei"
                        + ".DriverWorkState*:\n\016UserSourceType\022\013\n\007LO",
                "C_GPS\020\000\022\014\n\010LOC_WIFI\020\001\022\r\n\tLOC_OTHER\020\002*H\n\020"
                        + "DataSourceVendor\022\013\n\007DD_TAXI\020\000\022\t\n\005DD_GS\020\001"
                        + "\022\013\n\007KD_TAXI\020\002\022\017\n\013DD_SHUNFENG\020\003*}\n\017Driver"
                        + "WorkState\022\024\n\020DriverNotWorking\020\000\022!\n\035Drive"
                        + "rWorkingWithoutPassenger\020\001\022\036\n\032DriverWork"
                        + "ingWithPassenger\020\002\022\021\n\rDriverWorking\020\003*3\n"
                        + "\016CoordinateType\022\t\n\005BD_09\020\001\022\n\n\006GCJ_02\020\002\022\n"
                        + "\n\006WGS_84\020\004"};
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public com.google.protobuf.ExtensionRegistry assignDescriptors(
                    com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                internal_static_Didi2Siwei_Dd2SwTrajPoint_descriptor = getDescriptor()
                        .getMessageTypes().get(0);
                internal_static_Didi2Siwei_Dd2SwTrajPoint_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_Didi2Siwei_Dd2SwTrajPoint_descriptor,
                        new String[]{"Userid", "LocSource",
                                "LocationTimestamp", "Speed", "Direction",
                                "Lat", "Lng", "CoordType", "Accuracy",
                                "DataSource", "WorkState",});
                return null;
            }
        };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(
                        descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{},
                        assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
